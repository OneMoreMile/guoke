<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns="http://www.springframework.org/schema/beans" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://mybatis.org/schema/mybatis-spring
        http://mybatis.org/schema/mybatis-spring.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-lazy-init="false" default-autowire="byName">

    <context:annotation-config/>

    <!-- 扫描其它组件 -->
    <context:component-scan base-package="cn.guohe">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 指定配置文件位置 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
        <property name="resultSetLogEnabled" value="false"/>
        <property name="dataSourceLogEnabled" value="false"/>
        <property name="connectionLogEnabled" value="false"/>
        <property name="statementExecutableSqlLogEnable" value="true"/>
    </bean>

    <!-- data source -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="url" value="jdbc:mysql://localhost:3306/guohe?characterEncoding=UTF-8&amp;useUnicode=true&amp;connectTimeout=10000&amp;\
  socketTimeout=10000&amp;autoReconnect=true&amp;maxReconnects=5&amp;failOverReadOnly=false&amp;zeroDateTimeBehavior=convertToNull"/>
        <property name="username" value="root"/>
        <property name="password" value="Buy@82.5"/>

        <!--<property name="maxActive" value="${datasource.maxActive}"/>-->
        <!--<property name="initialSize" value="${datasource.initialSize}"/>-->
        <!--<property name="maxWait" value="${datasource.maxWait}"/>-->
        <!--<property name="minIdle" value="${datasource.minIdle}"/>-->

        <!--<property name="timeBetweenEvictionRunsMillis" value="${datasource.timeBetweenEvictionRunsMillis}"/>-->
        <!--<property name="minEvictableIdleTimeMillis" value="${datasource.minEvictableIdleTimeMillis}"/>-->

        <!--<property name="validationQuery" value="${datasource.validationQuery}"/>-->
        <!--<property name="testWhileIdle" value="${datasource.testWhileIdle}"/>-->
        <!--<property name="testOnBorrow" value="${datasource.testOnBorrow}"/>-->
        <!--<property name="testOnReturn" value="${datasource.testOnReturn}"/>-->

        <!--<property name="poolPreparedStatements" value="${datasource.poolPreparedStatements}"/>-->
        <!--<property name="maxOpenPreparedStatements" value="${datasource.maxOpenPreparedStatements}"/>-->

        <!--<property name="removeAbandoned" value="${datasource.removeAbandoned}"/>-->
        <!--<property name="removeAbandonedTimeout" value="${datasource.removeAbandonedTimeout}"/>-->
        <!--<property name="logAbandoned" value="${datasource.logAbandoned}"/>-->

        <property name="proxyFilters">
            <list>
                <ref bean="log-filter"/>
                <ref bean="wall-filter"/>
                <ref bean="stat-filter"/>
            </list>
        </property>
    </bean>

    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="1000"/>
        <property name="logSlowSql" value="true"/>
        <property name="mergeSql" value="true"/>
    </bean>

    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter"/>

    <!-- session factory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="configLocation" value="classpath:config/mybatis.xml"/>-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- mapper interface -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.guohe.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- transaction support-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="txManager"/>

</beans>
